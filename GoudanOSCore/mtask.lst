     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_hlt
     7 00000000                                 	EXTERN	_memman_alloc_4k
     8 00000000                                 	EXTERN	_set_segmdesc
     9 00000000                                 	EXTERN	_load_tr
    10 00000000                                 	EXTERN	_timer_alloc
    11 00000000                                 	EXTERN	_timer_settime
    12 00000000                                 	EXTERN	_farjmp
    13 00000000                                 [FILE "mtask.c"]
    14                                          [SECTION .text]
    15 00000000                                 	GLOBAL	_task_idle
    16 00000000                                 _task_idle:
    17 00000000 55                              	PUSH	EBP
    18 00000001 89 E5                           	MOV	EBP,ESP
    19 00000003                                 L2:
    20 00000003 E8 [00000000]                   	CALL	_io_hlt
    21 00000008 EB F9                           	JMP	L2
    22 0000000A                                 	GLOBAL	_task_now
    23 0000000A                                 _task_now:
    24 0000000A A1 [00000000]                   	MOV	EAX,DWORD [_taskctl]
    25 0000000F 55                              	PUSH	EBP
    26 00000010 89 E5                           	MOV	EBP,ESP
    27 00000012 5D                              	POP	EBP
    28 00000013 8B 10                           	MOV	EDX,DWORD [EAX]
    29 00000015 69 D2 00000198                  	IMUL	EDX,EDX,408
    30 0000001B 8D 44 02 08                     	LEA	EAX,DWORD [8+EDX+EAX*1]
    31 0000001F 8B 50 04                        	MOV	EDX,DWORD [4+EAX]
    32 00000022 8B 44 90 08                     	MOV	EAX,DWORD [8+EAX+EDX*4]
    33 00000026 C3                              	RET
    34 00000027                                 	GLOBAL	_task_add
    35 00000027                                 _task_add:
    36 00000027 55                              	PUSH	EBP
    37 00000028 89 E5                           	MOV	EBP,ESP
    38 0000002A 53                              	PUSH	EBX
    39 0000002B 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    40 0000002E 8B 53 08                        	MOV	EDX,DWORD [8+EBX]
    41 00000031 69 D2 00000198                  	IMUL	EDX,EDX,408
    42 00000037 03 15 [00000000]                	ADD	EDX,DWORD [_taskctl]
    43 0000003D 8B 42 08                        	MOV	EAX,DWORD [8+EDX]
    44 00000040 8D 4A 08                        	LEA	ECX,DWORD [8+EDX]
    45 00000043 83 F8 63                        	CMP	EAX,99
    46 00000046 7F 0F                           	JG	L6
    47 00000048 89 5C 81 08                     	MOV	DWORD [8+ECX+EAX*4],EBX
    48 0000004C 40                              	INC	EAX
    49 0000004D 89 42 08                        	MOV	DWORD [8+EDX],EAX
    50 00000050 C7 43 04 00000002               	MOV	DWORD [4+EBX],2
    51 00000057                                 L6:
    52 00000057 5B                              	POP	EBX
    53 00000058 5D                              	POP	EBP
    54 00000059 C3                              	RET
    55 0000005A                                 	GLOBAL	_task_remove
    56 0000005A                                 _task_remove:
    57 0000005A 55                              	PUSH	EBP
    58 0000005B 31 C9                           	XOR	ECX,ECX
    59 0000005D 89 E5                           	MOV	EBP,ESP
    60 0000005F 53                              	PUSH	EBX
    61 00000060 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    62 00000063 8B 43 08                        	MOV	EAX,DWORD [8+EBX]
    63 00000066 69 C0 00000198                  	IMUL	EAX,EAX,408
    64 0000006C 03 05 [00000000]                	ADD	EAX,DWORD [_taskctl]
    65 00000072 8D 50 08                        	LEA	EDX,DWORD [8+EAX]
    66 00000075 3B 48 08                        	CMP	ECX,DWORD [8+EAX]
    67 00000078 7D 0B                           	JGE	L10
    68 0000007A                                 L14:
    69 0000007A 39 5C 8A 08                     	CMP	DWORD [8+EDX+ECX*4],EBX
    70 0000007E 74 05                           	JE	L10
    71 00000080 41                              	INC	ECX
    72 00000081 3B 0A                           	CMP	ECX,DWORD [EDX]
    73 00000083 7C F5                           	JL	L14
    74 00000085                                 L10:
    75 00000085 8B 42 04                        	MOV	EAX,DWORD [4+EDX]
    76 00000088 FF 0A                           	DEC	DWORD [EDX]
    77 0000008A 39 C1                           	CMP	ECX,EAX
    78 0000008C 7D 04                           	JGE	L15
    79 0000008E 48                              	DEC	EAX
    80 0000008F 89 42 04                        	MOV	DWORD [4+EDX],EAX
    81 00000092                                 L15:
    82 00000092 8B 02                           	MOV	EAX,DWORD [EDX]
    83 00000094 39 42 04                        	CMP	DWORD [4+EDX],EAX
    84 00000097 7C 07                           	JL	L16
    85 00000099 C7 42 04 00000000               	MOV	DWORD [4+EDX],0
    86 000000A0                                 L16:
    87 000000A0 C7 43 04 00000001               	MOV	DWORD [4+EBX],1
    88 000000A7 8B 1A                           	MOV	EBX,DWORD [EDX]
    89 000000A9 39 D9                           	CMP	ECX,EBX
    90 000000AB 7D 0D                           	JGE	L24
    91 000000AD                                 L21:
    92 000000AD 8B 44 8A 0C                     	MOV	EAX,DWORD [12+EDX+ECX*4]
    93 000000B1 89 44 8A 08                     	MOV	DWORD [8+EDX+ECX*4],EAX
    94 000000B5 41                              	INC	ECX
    95 000000B6 39 D9                           	CMP	ECX,EBX
    96 000000B8 7C F3                           	JL	L21
    97 000000BA                                 L24:
    98 000000BA 5B                              	POP	EBX
    99 000000BB 5D                              	POP	EBP
   100 000000BC C3                              	RET
   101 000000BD                                 	GLOBAL	_task_switchsub
   102 000000BD                                 _task_switchsub:
   103 000000BD 55                              	PUSH	EBP
   104 000000BE 31 C9                           	XOR	ECX,ECX
   105 000000C0 89 E5                           	MOV	EBP,ESP
   106 000000C2 A1 [00000000]                   	MOV	EAX,DWORD [_taskctl]
   107 000000C7 31 D2                           	XOR	EDX,EDX
   108 000000C9                                 L31:
   109 000000C9 83 7C 10 08 00                  	CMP	DWORD [8+EAX+EDX*1],0
   110 000000CE 7F 0C                           	JG	L27
   111 000000D0 41                              	INC	ECX
   112 000000D1 81 C2 00000198                  	ADD	EDX,408
   113 000000D7 83 F9 09                        	CMP	ECX,9
   114 000000DA 7E ED                           	JLE	L31
   115 000000DC                                 L27:
   116 000000DC 89 08                           	MOV	DWORD [EAX],ECX
   117 000000DE C6 40 04 00                     	MOV	BYTE [4+EAX],0
   118 000000E2 5D                              	POP	EBP
   119 000000E3 C3                              	RET
   120 000000E4                                 	GLOBAL	_task_alloc
   121 000000E4                                 _task_alloc:
   122 000000E4 55                              	PUSH	EBP
   123 000000E5 31 C9                           	XOR	ECX,ECX
   124 000000E7 89 E5                           	MOV	EBP,ESP
   125 000000E9 31 D2                           	XOR	EDX,EDX
   126 000000EB                                 L39:
   127 000000EB 89 D0                           	MOV	EAX,EDX
   128 000000ED 03 05 [00000000]                	ADD	EAX,DWORD [_taskctl]
   129 000000F3 83 B8 00000FFC 00               	CMP	DWORD [4092+EAX],0
   130 000000FA 74 13                           	JE	L42
   131 000000FC 41                              	INC	ECX
   132 000000FD 81 C2 000000BC                  	ADD	EDX,188
   133 00000103 81 F9 000003E7                  	CMP	ECX,999
   134 00000109 7E E0                           	JLE	L39
   135 0000010B 31 C0                           	XOR	EAX,EAX
   136 0000010D                                 L33:
   137 0000010D 5D                              	POP	EBP
   138 0000010E C3                              	RET
   139 0000010F                                 L42:
   140 0000010F 05 00000FF8                     	ADD	EAX,4088
   141 00000114 C7 40 04 00000001               	MOV	DWORD [4+EAX],1
   142 0000011B C7 40 50 00000202               	MOV	DWORD [80+EAX],514
   143 00000122 C7 40 54 00000000               	MOV	DWORD [84+EAX],0
   144 00000129 C7 40 58 00000000               	MOV	DWORD [88+EAX],0
   145 00000130 C7 40 5C 00000000               	MOV	DWORD [92+EAX],0
   146 00000137 C7 40 60 00000000               	MOV	DWORD [96+EAX],0
   147 0000013E C7 40 68 00000000               	MOV	DWORD [104+EAX],0
   148 00000145 C7 40 6C 00000000               	MOV	DWORD [108+EAX],0
   149 0000014C C7 40 70 00000000               	MOV	DWORD [112+EAX],0
   150 00000153 C7 40 74 00000000               	MOV	DWORD [116+EAX],0
   151 0000015A C7 80 00000080 00000000         	MOV	DWORD [128+EAX],0
   152 00000164 C7 80 00000084 00000000         	MOV	DWORD [132+EAX],0
   153 0000016E C7 80 00000088 00000000         	MOV	DWORD [136+EAX],0
   154 00000178 C7 80 00000090 40000000         	MOV	DWORD [144+EAX],1073741824
   155 00000182 C7 40 34 00000000               	MOV	DWORD [52+EAX],0
   156 00000189 E9 FFFFFF7F                     	JMP	L33
   157 0000018E                                 	GLOBAL	_task_init
   158 0000018E                                 _task_init:
   159 0000018E 55                              	PUSH	EBP
   160 0000018F 89 E5                           	MOV	EBP,ESP
   161 00000191 57                              	PUSH	EDI
   162 00000192 56                              	PUSH	ESI
   163 00000193 31 FF                           	XOR	EDI,EDI
   164 00000195 53                              	PUSH	EBX
   165 00000196 31 F6                           	XOR	ESI,ESI
   166 00000198 68 0002EE58                     	PUSH	192088
   167 0000019D BB 000003E7                     	MOV	EBX,999
   168 000001A2 FF 75 08                        	PUSH	DWORD [8+EBP]
   169 000001A5 E8 [00000000]                   	CALL	_memman_alloc_4k
   170 000001AA A3 [00000000]                   	MOV	DWORD [_taskctl],EAX
   171 000001AF 58                              	POP	EAX
   172 000001B0 5A                              	POP	EDX
   173 000001B1                                 L48:
   174 000001B1 89 FA                           	MOV	EDX,EDI
   175 000001B3 8D 46 18                        	LEA	EAX,DWORD [24+ESI]
   176 000001B6 03 15 [00000000]                	ADD	EDX,DWORD [_taskctl]
   177 000001BC 89 82 00000FF8                  	MOV	DWORD [4088+EDX],EAX
   178 000001C2 8D 86 00001F58                  	LEA	EAX,DWORD [8024+ESI]
   179 000001C8 89 82 00001084                  	MOV	DWORD [4228+EDX],EAX
   180 000001CE 8D 86 00270018                  	LEA	EAX,DWORD [2555928+ESI]
   181 000001D4 C7 82 00000FFC 00000000         	MOV	DWORD [4092+EDX],0
   182 000001DE 68 00000089                     	PUSH	137
   183 000001E3 81 C2 00001024                  	ADD	EDX,4132
   184 000001E9 52                              	PUSH	EDX
   185 000001EA 6A 67                           	PUSH	103
   186 000001EC 50                              	PUSH	EAX
   187 000001ED E8 [00000000]                   	CALL	_set_segmdesc
   188 000001F2 A1 [00000000]                   	MOV	EAX,DWORD [_taskctl]
   189 000001F7 01 F8                           	ADD	EAX,EDI
   190 000001F9 68 00000082                     	PUSH	130
   191 000001FE 05 0000108C                     	ADD	EAX,4236
   192 00000203 81 C7 000000BC                  	ADD	EDI,188
   193 00000209 50                              	PUSH	EAX
   194 0000020A 8D 86 00271F58                  	LEA	EAX,DWORD [2563928+ESI]
   195 00000210 6A 0F                           	PUSH	15
   196 00000212 83 C6 08                        	ADD	ESI,8
   197 00000215 50                              	PUSH	EAX
   198 00000216 E8 [00000000]                   	CALL	_set_segmdesc
   199 0000021B 83 C4 20                        	ADD	ESP,32
   200 0000021E 4B                              	DEC	EBX
   201 0000021F 79 90                           	JNS	L48
   202 00000221 8B 0D [00000000]                	MOV	ECX,DWORD [_taskctl]
   203 00000227 31 D2                           	XOR	EDX,EDX
   204 00000229 BB 00000009                     	MOV	EBX,9
   205 0000022E                                 L53:
   206 0000022E 8D 04 11                        	LEA	EAX,DWORD [ECX+EDX*1]
   207 00000231 81 C2 00000198                  	ADD	EDX,408
   208 00000237 4B                              	DEC	EBX
   209 00000238 C7 40 08 00000000               	MOV	DWORD [8+EAX],0
   210 0000023F C7 40 0C 00000000               	MOV	DWORD [12+EAX],0
   211 00000246 79 E6                           	JNS	L53
   212 00000248 E8 FFFFFE97                     	CALL	_task_alloc
   213 0000024D 89 C6                           	MOV	ESI,EAX
   214 0000024F C7 40 04 00000002               	MOV	DWORD [4+EAX],2
   215 00000256 C7 40 0C 00000002               	MOV	DWORD [12+EAX],2
   216 0000025D C7 40 08 00000000               	MOV	DWORD [8+EAX],0
   217 00000264 50                              	PUSH	EAX
   218 00000265 E8 FFFFFDBD                     	CALL	_task_add
   219 0000026A E8 FFFFFE4E                     	CALL	_task_switchsub
   220 0000026F FF 36                           	PUSH	DWORD [ESI]
   221 00000271 E8 [00000000]                   	CALL	_load_tr
   222 00000276 E8 [00000000]                   	CALL	_timer_alloc
   223 0000027B FF 76 0C                        	PUSH	DWORD [12+ESI]
   224 0000027E 50                              	PUSH	EAX
   225 0000027F A3 [00000004]                   	MOV	DWORD [_task_timer],EAX
   226 00000284 E8 [00000000]                   	CALL	_timer_settime
   227 00000289 E8 FFFFFE56                     	CALL	_task_alloc
   228 0000028E 68 00010000                     	PUSH	65536
   229 00000293 FF 75 08                        	PUSH	DWORD [8+EBP]
   230 00000296 89 C3                           	MOV	EBX,EAX
   231 00000298 E8 [00000000]                   	CALL	_memman_alloc_4k
   232 0000029D 05 00010000                     	ADD	EAX,65536
   233 000002A2 89 43 64                        	MOV	DWORD [100+EBX],EAX
   234 000002A5 C7 43 4C [00000000]             	MOV	DWORD [76+EBX],_task_idle
   235 000002AC C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   236 000002B3 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   237 000002BA C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   238 000002C1 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   239 000002CB C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   240 000002D5 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   241 000002DF 6A 01                           	PUSH	1
   242 000002E1 6A 09                           	PUSH	9
   243 000002E3 53                              	PUSH	EBX
   244 000002E4 E8 0000000A                     	CALL	_task_run
   245 000002E9 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   246 000002EC 5B                              	POP	EBX
   247 000002ED 89 F0                           	MOV	EAX,ESI
   248 000002EF 5E                              	POP	ESI
   249 000002F0 5F                              	POP	EDI
   250 000002F1 5D                              	POP	EBP
   251 000002F2 C3                              	RET
   252 000002F3                                 	GLOBAL	_task_run
   253 000002F3                                 _task_run:
   254 000002F3 55                              	PUSH	EBP
   255 000002F4 89 E5                           	MOV	EBP,ESP
   256 000002F6 56                              	PUSH	ESI
   257 000002F7 53                              	PUSH	EBX
   258 000002F8 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   259 000002FB 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   260 000002FE 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   261 00000301 85 F6                           	TEST	ESI,ESI
   262 00000303 78 3B                           	JS	L63
   263 00000305                                 L59:
   264 00000305 85 C0                           	TEST	EAX,EAX
   265 00000307 7E 03                           	JLE	L60
   266 00000309 89 43 0C                        	MOV	DWORD [12+EBX],EAX
   267 0000030C                                 L60:
   268 0000030C 83 7B 04 02                     	CMP	DWORD [4+EBX],2
   269 00000310 74 20                           	JE	L64
   270 00000312                                 L61:
   271 00000312 83 7B 04 02                     	CMP	DWORD [4+EBX],2
   272 00000316 74 0A                           	JE	L62
   273 00000318 89 73 08                        	MOV	DWORD [8+EBX],ESI
   274 0000031B 53                              	PUSH	EBX
   275 0000031C E8 FFFFFD06                     	CALL	_task_add
   276 00000321 59                              	POP	ECX
   277 00000322                                 L62:
   278 00000322 A1 [00000000]                   	MOV	EAX,DWORD [_taskctl]
   279 00000327 C6 40 04 01                     	MOV	BYTE [4+EAX],1
   280 0000032B 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   281 0000032E 5B                              	POP	EBX
   282 0000032F 5E                              	POP	ESI
   283 00000330 5D                              	POP	EBP
   284 00000331 C3                              	RET
   285 00000332                                 L64:
   286 00000332 39 73 08                        	CMP	DWORD [8+EBX],ESI
   287 00000335 74 DB                           	JE	L61
   288 00000337 53                              	PUSH	EBX
   289 00000338 E8 FFFFFD1D                     	CALL	_task_remove
   290 0000033D 58                              	POP	EAX
   291 0000033E EB D2                           	JMP	L61
   292 00000340                                 L63:
   293 00000340 8B 73 08                        	MOV	ESI,DWORD [8+EBX]
   294 00000343 EB C0                           	JMP	L59
   295 00000345                                 	GLOBAL	_task_sleep
   296 00000345                                 _task_sleep:
   297 00000345 55                              	PUSH	EBP
   298 00000346 89 E5                           	MOV	EBP,ESP
   299 00000348 56                              	PUSH	ESI
   300 00000349 53                              	PUSH	EBX
   301 0000034A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   302 0000034D 83 7E 04 02                     	CMP	DWORD [4+ESI],2
   303 00000351 74 07                           	JE	L68
   304 00000353                                 L65:
   305 00000353 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   306 00000356 5B                              	POP	EBX
   307 00000357 5E                              	POP	ESI
   308 00000358 5D                              	POP	EBP
   309 00000359 C3                              	RET
   310 0000035A                                 L68:
   311 0000035A E8 FFFFFCAB                     	CALL	_task_now
   312 0000035F 56                              	PUSH	ESI
   313 00000360 89 C3                           	MOV	EBX,EAX
   314 00000362 E8 FFFFFCF3                     	CALL	_task_remove
   315 00000367 59                              	POP	ECX
   316 00000368 39 DE                           	CMP	ESI,EBX
   317 0000036A 75 E7                           	JNE	L65
   318 0000036C E8 FFFFFD4C                     	CALL	_task_switchsub
   319 00000371 E8 FFFFFC94                     	CALL	_task_now
   320 00000376 FF 30                           	PUSH	DWORD [EAX]
   321 00000378 6A 00                           	PUSH	0
   322 0000037A E8 [00000000]                   	CALL	_farjmp
   323 0000037F 58                              	POP	EAX
   324 00000380 5A                              	POP	EDX
   325 00000381 EB D0                           	JMP	L65
   326 00000383                                 	GLOBAL	_task_switch
   327 00000383                                 _task_switch:
   328 00000383 55                              	PUSH	EBP
   329 00000384 89 E5                           	MOV	EBP,ESP
   330 00000386 56                              	PUSH	ESI
   331 00000387 53                              	PUSH	EBX
   332 00000388 8B 1D [00000000]                	MOV	EBX,DWORD [_taskctl]
   333 0000038E 8B 13                           	MOV	EDX,DWORD [EBX]
   334 00000390 69 D2 00000198                  	IMUL	EDX,EDX,408
   335 00000396 8D 14 1A                        	LEA	EDX,DWORD [EDX+EBX*1]
   336 00000399 8D 4A 08                        	LEA	ECX,DWORD [8+EDX]
   337 0000039C 8B 41 04                        	MOV	EAX,DWORD [4+ECX]
   338 0000039F 8B 74 81 08                     	MOV	ESI,DWORD [8+ECX+EAX*4]
   339 000003A3 40                              	INC	EAX
   340 000003A4 89 41 04                        	MOV	DWORD [4+ECX],EAX
   341 000003A7 3B 42 08                        	CMP	EAX,DWORD [8+EDX]
   342 000003AA 74 4C                           	JE	L73
   343 000003AC                                 L70:
   344 000003AC 80 7B 04 00                     	CMP	BYTE [4+EBX],0
   345 000003B0 75 2D                           	JNE	L74
   346 000003B2                                 L71:
   347 000003B2 8B 41 04                        	MOV	EAX,DWORD [4+ECX]
   348 000003B5 8B 5C 81 08                     	MOV	EBX,DWORD [8+ECX+EAX*4]
   349 000003B9 FF 73 0C                        	PUSH	DWORD [12+EBX]
   350 000003BC FF 35 [00000004]                	PUSH	DWORD [_task_timer]
   351 000003C2 E8 [00000000]                   	CALL	_timer_settime
   352 000003C7 39 F3                           	CMP	EBX,ESI
   353 000003C9 58                              	POP	EAX
   354 000003CA 5A                              	POP	EDX
   355 000003CB 74 0B                           	JE	L69
   356 000003CD FF 33                           	PUSH	DWORD [EBX]
   357 000003CF 6A 00                           	PUSH	0
   358 000003D1 E8 [00000000]                   	CALL	_farjmp
   359 000003D6 5B                              	POP	EBX
   360 000003D7 5E                              	POP	ESI
   361 000003D8                                 L69:
   362 000003D8 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   363 000003DB 5B                              	POP	EBX
   364 000003DC 5E                              	POP	ESI
   365 000003DD 5D                              	POP	EBP
   366 000003DE C3                              	RET
   367 000003DF                                 L74:
   368 000003DF E8 FFFFFCD9                     	CALL	_task_switchsub
   369 000003E4 8B 15 [00000000]                	MOV	EDX,DWORD [_taskctl]
   370 000003EA 8B 02                           	MOV	EAX,DWORD [EDX]
   371 000003EC 69 C0 00000198                  	IMUL	EAX,EAX,408
   372 000003F2 8D 4C 10 08                     	LEA	ECX,DWORD [8+EAX+EDX*1]
   373 000003F6 EB BA                           	JMP	L71
   374 000003F8                                 L73:
   375 000003F8 C7 41 04 00000000               	MOV	DWORD [4+ECX],0
   376 000003FF EB AB                           	JMP	L70
   377 00000401                                 	GLOBAL	_taskctl
   378                                          [SECTION .data]
   379 00000000                                 	ALIGNB	4
   380 00000000                                 _taskctl:
   381 00000000 00 00 00 00                     	RESB	4
   382 00000004                                 	GLOBAL	_task_timer
   383                                          [SECTION .data]
   384 00000004                                 	ALIGNB	4
   385 00000004                                 _task_timer:
   386 00000004 00 00 00 00                     	RESB	4
